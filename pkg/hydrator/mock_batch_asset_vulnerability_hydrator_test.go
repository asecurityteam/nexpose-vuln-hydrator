// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asecurityteam/nexpose-vuln-hydrator/pkg/hydrator (interfaces: BatchAssetVulnerabilityHydrator)

// Package hydrator is a generated GoMock package.
package hydrator

import (
	context "context"
	reflect "reflect"

	domain "github.com/asecurityteam/nexpose-vuln-hydrator/pkg/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockBatchAssetVulnerabilityHydrator is a mock of BatchAssetVulnerabilityHydrator interface
type MockBatchAssetVulnerabilityHydrator struct {
	ctrl     *gomock.Controller
	recorder *MockBatchAssetVulnerabilityHydratorMockRecorder
}

// MockBatchAssetVulnerabilityHydratorMockRecorder is the mock recorder for MockBatchAssetVulnerabilityHydrator
type MockBatchAssetVulnerabilityHydratorMockRecorder struct {
	mock *MockBatchAssetVulnerabilityHydrator
}

// NewMockBatchAssetVulnerabilityHydrator creates a new mock instance
func NewMockBatchAssetVulnerabilityHydrator(ctrl *gomock.Controller) *MockBatchAssetVulnerabilityHydrator {
	mock := &MockBatchAssetVulnerabilityHydrator{ctrl: ctrl}
	mock.recorder = &MockBatchAssetVulnerabilityHydratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBatchAssetVulnerabilityHydrator) EXPECT() *MockBatchAssetVulnerabilityHydratorMockRecorder {
	return m.recorder
}

// BatchHydrateAssetVulnerabilities mocks base method
func (m *MockBatchAssetVulnerabilityHydrator) BatchHydrateAssetVulnerabilities(arg0 context.Context, arg1 []nexposeAssetVulnerability) ([]domain.VulnerabilityDetails, error) {
	ret := m.ctrl.Call(m, "BatchHydrateAssetVulnerabilities", arg0, arg1)
	ret0, _ := ret[0].([]domain.VulnerabilityDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchHydrateAssetVulnerabilities indicates an expected call of BatchHydrateAssetVulnerabilities
func (mr *MockBatchAssetVulnerabilityHydratorMockRecorder) BatchHydrateAssetVulnerabilities(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchHydrateAssetVulnerabilities", reflect.TypeOf((*MockBatchAssetVulnerabilityHydrator)(nil).BatchHydrateAssetVulnerabilities), arg0, arg1)
}
