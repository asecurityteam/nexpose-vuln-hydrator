// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asecurityteam/nexpose-vuln-hydrator/pkg/hydrator (interfaces: BatchCheckFetcher)

// Package mock_hydrator is a generated GoMock package.
package hydrator

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBatchCheckFetcher is a mock of BatchCheckFetcher interface
type MockBatchCheckFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockBatchCheckFetcherMockRecorder
}

// MockBatchCheckFetcherMockRecorder is the mock recorder for MockBatchCheckFetcher
type MockBatchCheckFetcherMockRecorder struct {
	mock *MockBatchCheckFetcher
}

// NewMockBatchCheckFetcher creates a new mock instance
func NewMockBatchCheckFetcher(ctrl *gomock.Controller) *MockBatchCheckFetcher {
	mock := &MockBatchCheckFetcher{ctrl: ctrl}
	mock.recorder = &MockBatchCheckFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBatchCheckFetcher) EXPECT() *MockBatchCheckFetcherMockRecorder {
	return m.recorder
}

// BatchFetchCheck mocks base method
func (m *MockBatchCheckFetcher) BatchFetchCheck(arg0 context.Context, arg1 []string) ([]bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchFetchCheck", arg0, arg1)
	ret0, _ := ret[0].([]bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchFetchCheck indicates an expected call of BatchFetchCheck
func (mr *MockBatchCheckFetcherMockRecorder) BatchFetchCheck(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchFetchCheck", reflect.TypeOf((*MockBatchCheckFetcher)(nil).BatchFetchCheck), arg0, arg1)
}
